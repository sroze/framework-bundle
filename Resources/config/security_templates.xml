<?xml version="1.0" ?>

<container xmlns="http://www.symfony-project.org/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.symfony-project.org/schema/dic/services http://www.symfony-project.org/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="security.authentication.factory.form" class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Security\Factory\FormLoginFactory" public="false">
            <tag name="security.listener.factory" />
        </service>

        <service id="security.authentication.factory.x509" class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Security\Factory\X509Factory" public="false">
            <tag name="security.listener.factory" />
        </service>

        <service id="security.authentication.factory.basic" class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Security\Factory\HttpBasicFactory" public="false">
            <tag name="security.listener.factory" />
        </service>

        <service id="security.authentication.factory.digest" class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Security\Factory\HttpDigestFactory" public="false">
            <tag name="security.listener.factory" />
        </service>
        
        <service id="security.authentication.factory.remember_me" class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Security\Factory\RememberMeFactory" public="false">
            <tag name="security.listener.factory" />
        </service>

        <service id="security.logout_listener" class="%security.logout_listener.class%" public="false">
            <argument type="service" id="security.context" />
            <argument>%security.logout.path%</argument>
            <argument>%security.logout.target_path%</argument>
        </service>

        <service id="security.logout.handler.cookie_clearing" class="%security.logout.handler.cookie_clearing.class%" public="false">
            <argument type="collection"></argument>
        </service>        

        <service id="security.authentication.form_entry_point" class="%security.authentication.form_entry_point.class%" public="false">
            <argument/>
            <argument/>
        </service>

        <service id="security.authentication.listener.form" class="%security.authentication.listener.form.class%" public="false">
            <argument type="service" id="security.context" />
            <argument type="service" id="security.authentication.manager" />
            <argument type="service" id="security.authentication.session_strategy" />
            <argument />
            <argument type="collection"></argument>
            <argument type="service" id="security.authentication.success_handler" on-invalid="null" />
            <argument type="service" id="security.authentication.failure_handler" on-invalid="null" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>

        <service id="security.authentication.listener.rememberme" class="%security.authentication.listener.rememberme.class%" public="false">
            <argument type="service" id="security.context" />
            <argument type="service" id="security.authentication.rememberme" />
            <argument type="service" id="security.authentication.manager" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>
        
        <service id="security.authentication.listener.x509" class="%security.authentication.listener.x509.class%" public="false">
            <argument type="service" id="security.context" />
            <argument type="service" id="security.authentication.manager" />
            <argument />
            <argument>%security.authentication.x509.user%</argument>
            <argument>%security.authentication.x509.credentials%</argument>
            <argument type="service" id="logger" on-invalid="null" />
        </service>

        <service id="security.authentication.listener.basic" class="%security.authentication.listener.basic.class%" public="false">
            <argument type="service" id="security.context" />
            <argument type="service" id="security.authentication.manager" />
            <argument></argument>
            <argument type="service" id="security.authentication.basic_entry_point" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>

        <service id="security.authentication.listener.digest" class="%security.authentication.listener.digest.class%" public="false">
            <argument type="service" id="security.context" />
            <argument type="service" id="security.user.provider.in_memory" />
            <argument></argument>
            <argument type="service" id="security.authentication.digest_entry_point" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>
        
        <service id="security.authentication.rememberme.services.simplehash" class="%security.authentication.rememberme.services.simplehash.class%" public="false">
            <argument type="collection" />
            <argument />
            <argument />
            <argument type="collection">
                <argument key="name">%security.authentication.rememberme.services.options.name%</argument>
                <argument key="lifetime">%security.authentication.rememberme.services.options.lifetime%</argument>
                <argument key="path">%security.authentication.rememberme.services.options.path%</argument>
                <argument key="domain">%security.authentication.rememberme.services.options.domain%</argument>
                <argument key="secure">%security.authentication.rememberme.services.options.secure%</argument>
                <argument key="httponly">%security.authentication.rememberme.services.options.httponly%</argument>
                <argument key="always_remember_me">%security.authentication.rememberme.services.options.always_remember_me%</argument>
                <argument key="remember_me_parameter">%security.authentication.rememberme.services.options.remember_me_parameter%</argument>
            </argument>
            <argument type="service" id="logger" on-invalid="null" />
        </service>
        
        <service id="security.authentication.rememberme.services.persistent" class="%security.authentication.rememberme.services.persistent.class%" public="false">
            <argument type="collection" />
            <argument />
            <argument />
            <argument type="collection">
                <argument key="name">%security.authentication.rememberme.services.options.name%</argument>
                <argument key="lifetime">%security.authentication.rememberme.services.options.lifetime%</argument>
                <argument key="path">%security.authentication.rememberme.services.options.path%</argument>
                <argument key="domain">%security.authentication.rememberme.services.options.domain%</argument>
                <argument key="secure">%security.authentication.rememberme.services.options.secure%</argument>
                <argument key="httponly">%security.authentication.rememberme.services.options.httponly%</argument>
                <argument key="always_remember_me">%security.authentication.rememberme.services.options.always_remember_me%</argument>
                <argument key="remember_me_parameter">%security.authentication.rememberme.services.options.remember_me_parameter%</argument>
            </argument>
            <argument type="service" id="logger" on-invalid="null" />
        </service>

        <service id="security.exception_listener" class="%security.exception_listener.class%" public="false">
            <argument type="service" id="security.context" />
            <argument type="service" id="security.authentication.trust_resolver" />
            <argument type="service" id="security.authentication.entry_point" on-invalid="null" />
            <argument>%security.access.denied_url%</argument>
            <argument type="service" id="security.access.denied_handler" on-invalid="null" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>


        <service id="security.authentication.switchuser_listener" class="%security.authentication.switchuser_listener.class%" public="false">
            <argument type="service" id="security.context" />
            <argument type="service" id="security.user.provider.in_memory" />
            <argument type="service" id="security.account_checker" />
            <argument type="service" id="security.access.decision_manager" />
            <argument type="service" id="logger" on-invalid="null" />
            <argument>%security.authentication.switchuser.parameter%</argument>
            <argument>%security.authentication.switchuser.role%</argument>
        </service>

        <service id="security.access_listener" class="%security.access_listener.class%" public="false">
            <argument type="service" id="security.context" />
            <argument type="service" id="security.access.decision_manager" />
            <argument type="service" id="security.access_map" />
            <argument type="service" id="security.authentication.manager" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>
        
        <service id="security.firewall.context" class="%security.firewall.context.class%" public="false">
            <argument type="collection" />
            <argument type="service" id="security.exception_listener" />
        </service>
    </services>
</container>
